{"ast":null,"code":"var _jsxFileName = \"/home/obaidmaster/Desktop/projects/weather_test/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weather: [],\n      error: null,\n      isLoaded: false,\n      items: []\n    }; // end constructor\n  }\n\n  componentDidMount() {\n    // Fetch Function Goes here\n    fetch(\"https://api.openweathermap.org/data/2.5/weather?q=alameda&appid=5641904b9f9d3a2b1751db682fa354ff\").then(res => console.log(res.json())).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.items\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  } // End Component Did Mount\n  //https://api.openweathermap.org/data/2.5/weather?q=alameda&appid=5641904b9f9d3a2b1751db682fa354ff\n\n\n  render() {\n    const error = this.state.error;\n    const isLoaded = this.state.isLoaded;\n    const items = this.state.items;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" ERror: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [console.log(items), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" \", isLoaded, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n} // End Class\n\n\nexport default App;","map":{"version":3,"sources":["/home/obaidmaster/Desktop/projects/weather_test/src/App.js"],"names":["React","Component","App","constructor","state","weather","error","isLoaded","items","componentDidMount","fetch","then","res","console","log","json","result","setState","render","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAC1BE,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,KAAK,EAAE,IAFI;AAGXC,MAAAA,QAAQ,EAAE,KAHC;AAIXC,MAAAA,KAAK,EAAE;AAJI,KAAb,CAFY,CAOT;AACJ;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACAC,IAAAA,KAAK,CACH,kGADG,CAAL,CAGGC,IAHH,CAGSC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,EAAZ,CAHjB,EAIGJ,IAJH,CAKKK,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZV,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEQ,MAAM,CAACR;AAFF,OAAd;AAID,KAVL,EAWKF,KAAD,IAAW;AACT,WAAKW,QAAL,CAAc;AACZV,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAhBL;AAkBD,GA/ByB,CA+BxB;AACF;;;AAEAY,EAAAA,MAAM,GAAG;AACP,UAAMZ,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAzB;AACA,UAAMC,QAAQ,GAAG,KAAKH,KAAL,CAAWG,QAA5B;AACA,UAAMC,KAAK,GAAG,KAAKJ,KAAL,CAAWI,KAAzB;;AACA,QAAIF,KAAJ,EAAW;AACT,0BAAO;AAAA,+BAAcA,KAAK,CAACa,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAI,CAACZ,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AACL,0BACE;AAAA,mBACGM,OAAO,CAACC,GAAR,CAAYN,KAAZ,CADH,eAEE;AAAA,0BAAMD,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD;AACF;;AAlDyB,C,CAmD1B;;;AAEF,eAAeL,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weather: [],\n      error: null,\n      isLoaded: false,\n      items: [],\n    }; // end constructor\n  }\n\n  componentDidMount() {\n    // Fetch Function Goes here\n    fetch(\n      \"https://api.openweathermap.org/data/2.5/weather?q=alameda&appid=5641904b9f9d3a2b1751db682fa354ff\"\n    )\n      .then((res) => console.log(res.json()))\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result.items,\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n  } // End Component Did Mount\n  //https://api.openweathermap.org/data/2.5/weather?q=alameda&appid=5641904b9f9d3a2b1751db682fa354ff\n\n  render() {\n    const error = this.state.error;\n    const isLoaded = this.state.isLoaded;\n    const items = this.state.items;\n    if (error) {\n      return <div> ERror: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div> Loading....</div>;\n    } else {\n      return (\n        <div>\n          {console.log(items)}\n          <h1> {isLoaded} </h1>\n        </div>\n      );\n    }\n  }\n} // End Class\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}